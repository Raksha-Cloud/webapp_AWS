name: CI/CD for creating AMI on merge of a PR
on:
  push:
    branches: [ main ]
jobs:
  unit_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    name: To install node and run unit test cases using mocha and chai
    steps:
      - name: 1. Checkout code from branch
        uses: actions/checkout@v2
      
      - name: 2. Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: 3. Run Npm build install and unit test cases
        run: |
          npm ci
          npm run build --if-present
          npm test
      
  packer_ami_build:
    needs: unit_test
    runs-on: ubuntu-latest
    name: To build AMI which contains all our project related artifacts
    steps: 
      - name: 1. Checkout code from branch
        uses: actions/checkout@v2
      - name: 2. Zip all the application artifacts files
        run: |
          zip -r webapp.zip ./
          pwd ./webapp
      
      - name: 3. Configure the IAM user Credentials set up in github secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: 4. run Packer Init
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: ami.pkr.hcl
      - name: 5. Validate the packer template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: ami.pkr.hcl
      - name: 6. create Custom AMI from Packer Build and upload the zipped artifacts
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: ami.pkr.hcl
        env:
          PACKER_LOG: 1